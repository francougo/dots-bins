#!/bin/bash

# Only one instance should be running
if pidof -x $0 -o $$ > /dev/null; 
then
        echo "An instance of pomodoro daemon is already running."
        exit 1
fi

pom=25                  # The time for every working period
break=5                 # Short breaks
l_break=15              # Long breaks
num=0                   # After 2 pom-breaks comes a pom-long break, so 0 and 1 means regular periods
                        # and 2 means one with a longer break
aux_time=$(($pom*60))   # Starting value for start_clock
mode=0                  # Mode 0: working; Mode 1: short break; Mode 2: long break
time=0                  # Only used for pause
state=1                 # 0: Running; 1: Paused; 2: Mode setting

format () {
        if [[ $1 < 10 ]]; then
                echo -n "0${1}"
        else 
                echo -n $1
        fi
}

start_clock () {        # Starts countdown of aux_time seconds, ends when $time is 0
        if [[ $state == 1 ]] 
        then
                # Only if paused
                st_time=$(date '+%s')
                time=$aux_time
        
                state=0
                while [ $time -gt 0 ];do
                        echo -n $(format $(($time/60)))
                        echo -n :
                        echo -n $(format $(($time%60)))
                        echo "  ${num} ${mode}"
                        time=$(($aux_time - ($(date '+%s') - $st_time)))
                        sleep 1
                done
                if [[ $state == 0 ]]    # If it is 1 the loop ended by a pause
                then
                        state=2
                        if [[ $mode == 0 ]] 
                        then
                                if [[ $num < 2 ]] 
                                then
                                        mode=1
                                else
                                        mode=2
                                fi
                        else
                                mode=0
                                num=$((($num + 1)%3))
                        fi
                        state=1
                        if [[ $mode == 0 ]] 
                        then
                                aux_time=$(($pom*60))
                        else
                                if [[ $num < 2 ]] 
                                then
                                        aux_time=$(($break*60))
                                else
                                        aux_time=$(($l_break*60))
                                fi
                                start_clock
                        fi
                fi
        fi

}

pause_clock () {
        if [[ $state == 0 ]] 
        then 
                # Only if running
                aux_time=$time
                state=1
                time=0
                echo -n $(format $(($aux_time/60)))
                echo -n :
                echo -n $(format $(($aux_time%60)))
                echo "  ${num} ${mode}"
        fi
}

rofi_conf () {
        op1=$(echo -e "Restart\nCustomize" | rofi -dmenu)
        if [[ $op1 == "Restart" ]]; then
                num=0
                mode=0
                aux_time=$(($pom*60))
                state=1
        else
                select=true
                while $select; do
                        op2=$(echo -e "Work time (${pom})\nShort Break (${break})\nLong Break (${l_break})\nEnd\nReset values" | rofi -dmenu)
                        case $(echo $op2 | awk '{print $1}') in
                                "Work")
                                        pom=$(echo ""| rofi -dmenu -p "Enter an integer: ")
                                        ;;
                                "Short")
                                        break=$(echo ""| rofi -dmenu -p "Enter an integer: ")
                                        ;;
                                "Long")
                                        l_break=$(echo ""| rofi -dmenu -p "Enter an integer: ")
                                        ;;
                                "End")
                                        select=false
                                        ;;
                                "Reset")
                                        pom=25
                                        break=5
                                        l_break=15
                                        ;;
                        esac
                done
                num=0
                mode=0
                aux_time=$(($pom*60))
                state=1

        fi
}


trap pause_clock USR2
trap "start_clock" USR1
trap "rofi_conf" HUP

while true;do
        sleep 1
done


